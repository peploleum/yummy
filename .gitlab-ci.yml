
# needs CI_BUILD_PUBLIC_USER: registry user, CI_BUILD_PUBLIC_TOKEN: registry password for dockerhub
# needs CI_BUILD_PRIVATE_USER: registry user, CI_BUILD_PRIVATE_TOKEN: registry password for internal registry
variables:
  DOCKER_DRIVER: overlay2
  APP_NAME: yummy
  CI_DOCKER_PRIVATE_REGISTRY: 192.168.0.52:9082
  CI_DOCKER_PUSH_REGISTRY: 192.168.0.52:9080
  CI_DOCKER_IMAGE: yummy
  PRIVATE_CONTAINER_IMAGE: $CI_DOCKER_PUSH_REGISTRY/$CI_DOCKER_IMAGE
  PUBLIC_CONTAINER_IMAGE: $CI_BUILD_PUBLIC_USER/$CI_DOCKER_IMAGE

stages:
  - build
  - build-docker
  - deploy

maven-build:
  image: $CI_DOCKER_PRIVATE_REGISTRY/java-node:jdk8-alpine3.9
  stage: build
  script: "mvn clean package -DskipTests"
  artifacts:
    paths:
      - target/*.jar
      - target/*.sh
      - target/Dockerfile

docker-build-private:
  stage: build-docker
  services:
    - name: $CI_DOCKER_PRIVATE_REGISTRY/docker:dind
  script:
    - docker login -u $CI_BUILD_PRIVATE_USER -p $CI_BUILD_PRIVATE_TOKEN $CI_DOCKER_PUSH_REGISTRY
    - cd target
    - docker build --tag $PRIVATE_CONTAINER_IMAGE:latest .
    - docker push $PRIVATE_CONTAINER_IMAGE:latest

docker-build-public:
  stage: build-docker
  services:
    - name: $CI_DOCKER_PRIVATE_REGISTRY/docker:dind
  script:
    - docker login -u $CI_BUILD_PUBLIC_USER -p $CI_BUILD_PUBLIC_TOKEN 
    - cd target
    - docker build --tag $PUBLIC_CONTAINER_IMAGE:latest .
    - docker push $PUBLIC_CONTAINER_IMAGE:latest
  allow_failure: true


kubernetes_deploy:
  stage: deploy
  image: $CI_DOCKER_PRIVATE_REGISTRY/artemis-kubectl:1.13
  script:
    - kubectl config set-cluster $KUBE_CLUSTER --server=$KUBE_URL --insecure-skip-tls-verify
    - kubectl config set-context $KUBE_CONTEXT --cluster=$KUBE_CLUSTER
    - kubectl config set-credentials $KUBE_USER --token=$KUBE_TOKEN
    - kubectl config set-context $KUBE_CONTEXT --user=$KUBE_USER
    - kubectl config use-context $KUBE_CONTEXT
    - kubectl set image deployment/yummy yummy-app=$CI_DOCKER_PRIVATE_REGISTRY/$CI_DOCKER_IMAGE:latest --namespace=insight
